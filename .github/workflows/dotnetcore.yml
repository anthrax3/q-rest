name: Main
env:
  NUGETURL: https://api.nuget.org/v3/index.json
  NUGET_TOKEN: ${{ secrets.nuget }}
  SDKVER: 2.2.402
  MODE: Release
  CODACY_TOKEN: ${{ secrets.codacy }}
 
on: [push]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Configure
      run: echo ::set-env name=TAG::$(echo ${GITHUB_REF:10})
      run: echo ::set-env name=VERSION::$(echo ${TAG:-0.0.0-dev})
      run: echo ::set-env name=VERSIONFULL::$(echo $VERSION:$GITHUB_SHA)
      run: echo ::set-env name=ISRELEASE::$(test -z "$TAG")
    - name: Checkout
      uses: actions/checkout@v1
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: $SDKVER
    - name: Build
      run: dotnet build ./ -c $MODE -p:Version=${VERSION} -p:InformationalVersion=$VERSIONFULL
    - name: Test
      run: dotnet test ./ -c $MODE --no-build /p:CollectCoverage=true /p:CoverletOutputFormat=opencover /p:CoverletOutput='./TestResults/'
    - name: Submit coverage
      run: |
        curl -Ls "https://github.com/codacy/csharp-codacy-coverage/releases/download/1.0.5/Codacy.CSharpCoverage_linux-x64" --output codacy
        chmod +x ./codacy
        coverfiles=$(find . -type f -name coverage.opencover.xml)
        for coverfile in $coverfiles; do
        ./codacy -c $GITHUB_SHA -t $CODACY_TOKEN -r "$coverfile" -e opencover -p
        done
        if [ -n "$coverfiles" ]; then
        ./codacy -c $GITHUB_SHA -t $CODACY_TOKEN -f
        fi

